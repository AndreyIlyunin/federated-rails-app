schema
  @core(feature: "https://specs.apollo.dev/core/v0.1"),
  @core(feature: "https://specs.apollo.dev/join/v0.1")
{
  query: Query
  mutation: Mutation
}

directive @core(feature: String!) repeatable on SCHEMA

directive @join__field(graph: join__Graph, requires: join__FieldSet, provides: join__FieldSet) on FIELD_DEFINITION

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on OBJECT | INTERFACE

directive @join__owner(graph: join__Graph!) on OBJECT | INTERFACE

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

type Article {
  content: String
  id: ID!
  user: User
  userId: Int
}

"""The connection type for Article."""
type ArticleConnection {
  """A list of edges."""
  edges: [ArticleEdge]

  """A list of nodes."""
  nodes: [Article]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type ArticleEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: Article
}

scalar join__FieldSet

enum join__Graph {
  ARTICLES @join__graph(name: "articles" url: "http://localhost:3001/graphql")
  USERS @join__graph(name: "users" url: "http://localhost:3000/graphql")
}

type Mutation {
  """An example field added by the generator"""
  testFieldOnArticles: String! @join__field(graph: ARTICLES)

  """An example field added by the generator"""
  testFieldOnUsers: String! @join__field(graph: USERS)
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, the cursor to continue."""
  endCursor: String

  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String
}

type Query {
  articles(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ArticleConnection! @join__field(graph: ARTICLES)
  users(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): UserConnection! @join__field(graph: USERS)
}

type User
  @join__owner(graph: USERS)
  @join__type(graph: USERS, key: "id")
  @join__type(graph: ARTICLES, key: "id")
{
  articles(
    """Returns the elements in the list that come after the specified cursor."""
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """Returns the first _n_ elements from the list."""
    first: Int

    """Returns the last _n_ elements from the list."""
    last: Int
  ): ArticleConnection @join__field(graph: ARTICLES)
  id: ID! @join__field(graph: USERS)
  login: String @join__field(graph: USERS)
}

"""The connection type for User."""
type UserConnection {
  """A list of edges."""
  edges: [UserEdge]

  """A list of nodes."""
  nodes: [User]

  """Information to aid in pagination."""
  pageInfo: PageInfo!
}

"""An edge in a connection."""
type UserEdge {
  """A cursor for use in pagination."""
  cursor: String!

  """The item at the end of the edge."""
  node: User
}
